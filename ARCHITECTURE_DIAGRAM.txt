# URL Analysis Feature - System Architecture

```
┌─────────────────────────────────────────────────────────────────────┐
│                    FAKE REVIEW DETECTOR - URL ANALYSIS              │
│                           System Flow Diagram                        │
└─────────────────────────────────────────────────────────────────────┘

┌─────────────┐
│   USER      │
│ Input URL   │
└──────┬──────┘
       │
       │ https://amazon.com/product/ABC123
       │
       ▼
┌──────────────────────────────────────────────────────────────────┐
│  STREAMLIT WEB APP (app.py)                                      │
│  ┌────────────────────────────────────────────────────────────┐ │
│  │  🔗 URL Analysis Page                                       │ │
│  │  • Text input for product URL                              │ │
│  │  • Max reviews selector (10-100)                           │ │
│  │  • Platform info display                                   │ │
│  └────────────────────────────────────────────────────────────┘ │
└──────────────────────────┬───────────────────────────────────────┘
                           │
                           ▼
┌──────────────────────────────────────────────────────────────────┐
│  WEB SCRAPER MODULE (src/web_scraper.py)                         │
│  ┌────────────────────────────────────────────────────────────┐ │
│  │  ReviewScraper Class                                        │ │
│  │  ├─ identify_platform(url)                                 │ │
│  │  │   └─> Detect: Amazon / Flipkart / eBay                 │ │
│  │  │                                                          │ │
│  │  ├─ scrape_reviews(url)                                    │ │
│  │  │   ├─> Send HTTP requests                               │ │
│  │  │   ├─> Parse HTML with BeautifulSoup                    │ │
│  │  │   ├─> Extract: text, rating, date                      │ │
│  │  │   ├─> Handle pagination (up to 5 pages)               │ │
│  │  │   └─> Apply rate limiting (1.5s delay)                │ │
│  │  │                                                          │ │
│  │  └─ reviews_to_dataframe(reviews)                         │ │
│  │      └─> Convert to pandas DataFrame                      │ │
│  └────────────────────────────────────────────────────────────┘ │
└──────────────────────────┬───────────────────────────────────────┘
                           │
                           │ DataFrame with review data
                           │
                           ▼
┌──────────────────────────────────────────────────────────────────┐
│  PREDICTION MODULE (src/prediction.py)                           │
│  ┌────────────────────────────────────────────────────────────┐ │
│  │  ReviewPredictor Class                                      │ │
│  │  ├─ predict_from_dataframe(df, 'text')                    │ │
│  │  │   │                                                      │ │
│  │  │   ├─> For each review:                                 │ │
│  │  │   │    ├─ preprocess_text()                            │ │
│  │  │   │    │   └─ Clean, tokenize, remove stopwords       │ │
│  │  │   │    │                                                │ │
│  │  │   │    ├─ extract_features()                           │ │
│  │  │   │    │   ├─ TF-IDF vectorization (150 features)     │ │
│  │  │   │    │   └─ Additional text features (6 features)   │ │
│  │  │   │    │       • text_length                           │ │
│  │  │   │    │       • word_count                            │ │
│  │  │   │    │       • avg_word_length                       │ │
│  │  │   │    │       • uppercase_ratio                       │ │
│  │  │   │    │       • exclamation_count                     │ │
│  │  │   │    │       • question_count                        │ │
│  │  │   │    │                                                │ │
│  │  │   │    └─> Total: 156 features                         │ │
│  │  │   │                                                      │ │
│  │  │   └─> ML Model Prediction                              │ │
│  │  │       ├─ Load trained model (Naive Bayes)             │ │
│  │  │       ├─ Predict: FAKE / GENUINE                       │ │
│  │  │       └─ Confidence score (0-100%)                     │ │
│  │  │                                                          │ │
│  │  └─ Return results DataFrame                              │ │
│  │      └─ predicted_label, prediction_confidence, probs     │ │
│  └────────────────────────────────────────────────────────────┘ │
└──────────────────────────┬───────────────────────────────────────┘
                           │
                           │ Results DataFrame
                           │
                           ▼
┌──────────────────────────────────────────────────────────────────┐
│  ANALYSIS & VISUALIZATION (app.py)                               │
│  ┌────────────────────────────────────────────────────────────┐ │
│  │  Calculate Metrics                                          │ │
│  │  ├─ Total reviews                                          │ │
│  │  ├─ Fake count & percentage                               │ │
│  │  ├─ Genuine count & percentage                            │ │
│  │  └─ Average confidence                                     │ │
│  │                                                             │ │
│  │  Alert System                                              │ │
│  │  ├─ >30% fake  → 🚨 HIGH ALERT                           │ │
│  │  ├─ 15-30% fake → ⚠️ CAUTION                             │ │
│  │  └─ <15% fake  → ✅ GOOD                                 │ │
│  │                                                             │ │
│  │  Visualizations                                            │ │
│  │  ├─ Pie Chart (Fake vs Genuine)                          │ │
│  │  ├─ Histogram (Confidence Distribution)                   │ │
│  │  ├─ Color-coded Table (All results)                      │ │
│  │  └─ Top Suspicious Reviews                               │ │
│  │                                                             │ │
│  │  Export                                                    │ │
│  │  └─ CSV Download with timestamp                           │ │
│  └────────────────────────────────────────────────────────────┘ │
└──────────────────────────┬───────────────────────────────────────┘
                           │
                           ▼
┌──────────────────────────────────────────────────────────────────┐
│  USER RECEIVES COMPREHENSIVE ANALYSIS                            │
│  ┌────────────────────────────────────────────────────────────┐ │
│  │  📊 Dashboard Display                                       │ │
│  │  ├─ Overall assessment (Alert level)                      │ │
│  │  ├─ Key metrics (counts, percentages)                     │ │
│  │  ├─ Visual charts (pie, histogram)                        │ │
│  │  ├─ Detailed review table (filterable)                    │ │
│  │  ├─ Top suspicious reviews list                           │ │
│  │  └─ Download button (CSV export)                          │ │
│  └────────────────────────────────────────────────────────────┘ │
└──────────────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════════════
                         DATA FLOW EXAMPLE
═══════════════════════════════════════════════════════════════════

INPUT:
  URL: https://amazon.com/dp/B08XYZ123
  Max Reviews: 50

SCRAPING STAGE:
  ├─ Platform: Amazon (detected)
  ├─ Reviews Found: 47
  ├─ Time: 60 seconds
  └─ Output: DataFrame with columns [text, rating, date, platform]

PREDICTION STAGE:
  ├─ Reviews Processed: 47
  ├─ Features Extracted: 156 per review
  ├─ Model: MultinomialNB (loaded from pkl)
  └─ Time: <1 second

ANALYSIS RESULTS:
  ┌────────────────────────────────────────────────────┐
  │  Total Reviews: 47                                 │
  │  Fake Reviews: 8 (17.0%)                          │
  │  Genuine Reviews: 39 (83.0%)                      │
  │  Avg Confidence: 94.2%                            │
  │                                                     │
  │  ⚠️ CAUTION: Moderate fake review presence        │
  └────────────────────────────────────────────────────┘

EXPORT:
  File: review_analysis_amazon_20251029_143052.csv
  Size: 42 KB
  Rows: 47 + header


═══════════════════════════════════════════════════════════════════
                      TECHNICAL SPECIFICATIONS
═══════════════════════════════════════════════════════════════════

SUPPORTED PLATFORMS:
  • Amazon (amazon.com, amazon.in, amazon.co.uk, amazon.de, amazon.fr)
  • Flipkart (flipkart.com)
  • eBay (ebay.com, ebay.in, ebay.co.uk)

SCRAPING PARAMETERS:
  • Max Reviews: 10-100 (configurable)
  • Rate Limit: 1.5 seconds between requests
  • Timeout: 10 seconds per request
  • Max Pages: 5 pages per session
  • User Agent: Mozilla/5.0 (standard browser)

ML MODEL FEATURES:
  • TF-IDF Features: 150
    - max_features: 5000
    - ngram_range: (1, 2)
    - min_df: 2
    - max_df: 0.8
  
  • Text Features: 6
    - text_length
    - word_count
    - avg_word_length
    - uppercase_ratio
    - exclamation_count
    - question_count
  
  • Total Features: 156
  • Model Type: MultinomialNB
  • Accuracy: >95% on test set

DEPENDENCIES:
  • requests==2.31.0       (HTTP client)
  • beautifulsoup4==4.12.3 (HTML parsing)
  • lxml==5.1.0           (XML/HTML parser)
  • pandas==2.2.3         (Data manipulation)
  • numpy==1.26.4         (Numerical operations)
  • scikit-learn==1.6.1   (ML framework)
  • streamlit==1.45.1     (Web framework)

PERFORMANCE:
  • Scraping: ~50 reviews in 60-90 seconds
  • Prediction: ~100 reviews per second
  • Memory: <100 MB typical usage
  • Accuracy: 95%+ based on training


═══════════════════════════════════════════════════════════════════
                       ERROR HANDLING FLOW
═══════════════════════════════════════════════════════════════════

┌─────────────┐
│ User Input  │
└──────┬──────┘
       │
       ▼
┌──────────────────────┐     ┌─────────────────────────────┐
│ Validate URL         │────>│ Invalid URL                 │
│ • Check format       │     │ → Show error message        │
│ • Detect platform    │     │ → Suggest valid examples    │
└──────┬───────────────┘     └─────────────────────────────┘
       │ Valid
       ▼
┌──────────────────────┐     ┌─────────────────────────────┐
│ Scrape Reviews       │────>│ No Reviews Found            │
│ • HTTP requests      │     │ → Show troubleshooting tips │
│ • Parse HTML         │     │ → Suggest alternatives      │
└──────┬───────────────┘     └─────────────────────────────┘
       │ Success
       ▼
┌──────────────────────┐     ┌─────────────────────────────┐
│ Analyze Reviews      │────>│ Analysis Error              │
│ • Load model         │     │ → Show error details        │
│ • Make predictions   │     │ → Log for debugging         │
└──────┬───────────────┘     └─────────────────────────────┘
       │ Success
       ▼
┌──────────────────────┐
│ Display Results      │
│ • Show dashboard     │
│ • Enable export      │
└──────────────────────┘


═══════════════════════════════════════════════════════════════════
              Made with ❤️ | Fake Review Detector v1.1
═══════════════════════════════════════════════════════════════════
```
